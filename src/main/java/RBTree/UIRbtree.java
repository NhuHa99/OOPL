/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RBTree;
import Comom.Param;
import Comom.Tree;

/**
 *
 * @author ddung
 */
public class UIRbtree extends javax.swing.JFrame {

    /**
     * Creates new form UIRbtree
     */
    private RedBlackTree RbTree;
    public UIRbtree() {
        this.setTitle("RedBlackTree");
        this.setSize(Param.WIDTH + 50, Param.HEIGHT);
        RbTree = new RedBlackTree();
        rBTreePanel2 = new RBTreePanel();
        initComponents();
        Random.setBackground(Param.COLOR_BUTT_CREATE);
        Add.setBackground(Param.COLOR_ADDED);       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        inputNumber = new javax.swing.JTextField();
        Random = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Search = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        rBTreePanel2 = new RBTree.RBTreePanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(218, 148, 78));

        Random.setText("Random");
        Random.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickRandom(evt);
            }
        });

        Add.setText("Add");
        Add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickAdd(evt);
            }
        });
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Search.setText("Search");
        Search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickSearch(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickDelete(evt);
            }
        });

        Clear.setText("Clear");
        Clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickClear(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Random, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Random)
                    .addComponent(Add)
                    .addComponent(Search)
                    .addComponent(Delete)
                    .addComponent(Clear))
                .addContainerGap())
        );

        javax.swing.GroupLayout rBTreePanel2Layout = new javax.swing.GroupLayout(rBTreePanel2);
        rBTreePanel2.setLayout(rBTreePanel2Layout);
        rBTreePanel2Layout.setHorizontalGroup(
            rBTreePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        rBTreePanel2Layout.setVerticalGroup(
            rBTreePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 414, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rBTreePanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rBTreePanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddActionPerformed

    private void clickRandom(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickRandom
        // TODO add your handling code here:
        int val = (int) ((Math.random()*100)+1);
        addNode(val);
    }//GEN-LAST:event_clickRandom

    private void clickDelete(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickDelete
        // TODO add your handling code here:
        int value;
				
	try {
		value = Integer.parseInt(inputNumber.getText());
	} catch (NumberFormatException e) {
            return;
	}		
	Tree forRemove = RbTree.searchTree(value);
	if (forRemove == null) {
		return;
	}
				
	rBTreePanel2.repaint();
	new java.util.Timer().schedule( 
	new java.util.TimerTask() {
	@Override
	 public void run() {
		RbTree.deleteNode(value);
                rBTreePanel2.startAction();
		}
        }, 
        2000 
	);
    }//GEN-LAST:event_clickDelete

    private void clickAdd(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickAdd
        // TODO add your handling code here:
        int value;
				
	try {
		value = Integer.parseInt(inputNumber.getText());
	} catch (NumberFormatException e) {
            return;
	}
        addNode(value);
    }//GEN-LAST:event_clickAdd

    private void clickClear(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickClear
        // TODO add your handling code here:
        RbTree.clear();
        rBTreePanel2.repaint();
    }//GEN-LAST:event_clickClear

    private void clickSearch(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickSearch
        // TODO add your handling code here:
        int value;			
	try {
		value = Integer.parseInt(inputNumber.getText());
	} catch (NumberFormatException e) {
            return;
	}
        Tree node = RbTree.searchTree(value);
        if(node != null){
            RedBlackTree.setSearchKey(node.getValue());
            rBTreePanel2.repaint();
        }
    }//GEN-LAST:event_clickSearch

    /**
     * @param args the command line arguments
     */
     private void addNode(int value){
                Tree localTree = RbTree.insert(value);
                if(localTree!=null){
                    setXY(localTree);
                    rBTreePanel2.startAction();
            }
    }
    
    public void setXY(Tree localTree){
           Tree parent = localTree.getParent();
           if(parent == null){
               localTree.setX(Param.WIDTH/2);
               localTree.setY(Param.TOP_MARGIN);
           }else{
               if(parent.getParent() == null){
                    if(localTree.getValue() < parent.getValue()){
                        localTree.setX(Param.WIDTH/4);
                        localTree.setY(Param.NODE_MARGIN + parent.getY());
                    }else{
                        localTree.setX(Param.WIDTH - Param.WIDTH/4);
                        localTree.setY(Param.NODE_MARGIN + parent.getY());
                    }
               } else {
                   
                   if (localTree.getValue() < parent.getValue()){
                            localTree.setX(parent.getX() - Math.abs(parent.getX() - parent.getParent().getX())/2);
                            localTree.setY(Param.NODE_MARGIN + parent.getY());
			} else {
                            localTree.setX(parent.getX() + Math.abs(parent.getX() - parent.getParent().getX())/2);
                            localTree.setY(Param.NODE_MARGIN + parent.getY());
			}
               }
//                localTree.setX(localTree.getParent().getX());
//                localTree.setY(localTree.getParent().getY());
           }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Random;
    private javax.swing.JButton Search;
    private javax.swing.JTextField inputNumber;
    private javax.swing.JPanel jPanel1;
    private RBTree.RBTreePanel rBTreePanel2;
    // End of variables declaration//GEN-END:variables

}
